# keyboards.py

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import config
import game_state
from global_events import EVENT_CLASSES


def construction_menu():
    """–ú–µ–Ω—é –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è."""
    keyboard = [
        [KeyboardButton(text="–£–ª—É—á—à–∏—Ç—å –≥–æ—Ä–æ–¥"), KeyboardButton(text="üß± –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –±—É–Ω–∫–µ—Ä")],
        [KeyboardButton(text="üéâ –°–æ—Ü. –ø—Ä–æ–≥—Ä–∞–º–º–∞")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def military_menu():
    """–ú–µ–Ω—é –¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π."""
    keyboard = [
        [KeyboardButton(text="–ü—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —è–¥–µ—Ä–Ω—É—é –±–æ–º–±—É"), KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —â–∏—Ç")],
        [KeyboardButton(text="–ê—Ç–∞–∫–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω—É"), KeyboardButton(text="üëÅÔ∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —à–ø–∏–æ–Ω–∞–∂")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def diplomacy_menu():
    """–ú–µ–Ω—é –¥–ª—è –¥–∏–ø–ª–æ–º–∞—Ç–∏–∏ –∏ –≤–Ω–µ—à–Ω–µ–π –ø–æ–ª–∏—Ç–∏–∫–∏."""
    keyboard = [
        [KeyboardButton(text="ü§ù –û–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"), KeyboardButton(text="–ù–∞—á–∞—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã")],
        [KeyboardButton(text="–ö–∞–ø–∏—Ç—É–ª–∏—Ä–æ–≤–∞—Ç—å")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def main_menu(user_id):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ì–õ–ê–í–ù–û–ï –º–µ–Ω—é (–Ω–∞—à "—Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª")."""
    if user_id == config.ADMIN_ID:
        return ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="–ê–¥–º–∏–Ω–∫–∞")]], resize_keyboard=True)

    p = game_state.players.get(user_id, {})
    if not p or not p.get("country"):
        return ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="/start")]], resize_keyboard=True)



    ready_button_text = "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å" if p.get("ready_for_next_round") else "‚úÖ –Ø –≥–æ—Ç–æ–≤"


    base_keyboard_rows = [

        [KeyboardButton(text="–û–±–∑–æ—Ä —Å—Ç—Ä–∞–Ω"), KeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],

        [KeyboardButton(text="üè¢ –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ"), KeyboardButton(text="üí• –í–æ–µ–Ω–Ω–æ–µ –¥–µ–ª–æ"),
         KeyboardButton(text="üèõÔ∏è –ü–æ–ª–∏—Ç–∏–∫–∞")],

        [KeyboardButton(text=ready_button_text), KeyboardButton(text="–í—ã–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞")]

    ]

    # The dynamic button for global events remains here
    if game_state.active_global_event:
        event_id = game_state.active_global_event.get('id')
        event_class = EVENT_CLASSES.get(event_id)
        if event_class and hasattr(event_class, 'type') and event_class.type in ['crisis', 'opportunity']:
            button_text = getattr(event_class, "button_text", "üåç –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ")
            base_keyboard_rows.insert(0, [KeyboardButton(text=button_text)])

    return ReplyKeyboardMarkup(keyboard=base_keyboard_rows, resize_keyboard=True)